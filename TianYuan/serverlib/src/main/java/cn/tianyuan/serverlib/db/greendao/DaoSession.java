package cn.tianyuan.serverlib.db.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import cn.tianyuan.serverlib.db.been.Addr;
import cn.tianyuan.serverlib.db.been.Book;
import cn.tianyuan.serverlib.db.been.Comment;
import cn.tianyuan.serverlib.db.been.Favorite;
import cn.tianyuan.serverlib.db.been.Intention;
import cn.tianyuan.serverlib.db.been.Order;
import cn.tianyuan.serverlib.db.been.Type;
import cn.tianyuan.serverlib.db.been.User;

import cn.tianyuan.serverlib.db.greendao.AddrDao;
import cn.tianyuan.serverlib.db.greendao.BookDao;
import cn.tianyuan.serverlib.db.greendao.CommentDao;
import cn.tianyuan.serverlib.db.greendao.FavoriteDao;
import cn.tianyuan.serverlib.db.greendao.IntentionDao;
import cn.tianyuan.serverlib.db.greendao.OrderDao;
import cn.tianyuan.serverlib.db.greendao.TypeDao;
import cn.tianyuan.serverlib.db.greendao.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig addrDaoConfig;
    private final DaoConfig bookDaoConfig;
    private final DaoConfig commentDaoConfig;
    private final DaoConfig favoriteDaoConfig;
    private final DaoConfig intentionDaoConfig;
    private final DaoConfig orderDaoConfig;
    private final DaoConfig typeDaoConfig;
    private final DaoConfig userDaoConfig;

    private final AddrDao addrDao;
    private final BookDao bookDao;
    private final CommentDao commentDao;
    private final FavoriteDao favoriteDao;
    private final IntentionDao intentionDao;
    private final OrderDao orderDao;
    private final TypeDao typeDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        addrDaoConfig = daoConfigMap.get(AddrDao.class).clone();
        addrDaoConfig.initIdentityScope(type);

        bookDaoConfig = daoConfigMap.get(BookDao.class).clone();
        bookDaoConfig.initIdentityScope(type);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        favoriteDaoConfig = daoConfigMap.get(FavoriteDao.class).clone();
        favoriteDaoConfig.initIdentityScope(type);

        intentionDaoConfig = daoConfigMap.get(IntentionDao.class).clone();
        intentionDaoConfig.initIdentityScope(type);

        orderDaoConfig = daoConfigMap.get(OrderDao.class).clone();
        orderDaoConfig.initIdentityScope(type);

        typeDaoConfig = daoConfigMap.get(TypeDao.class).clone();
        typeDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        addrDao = new AddrDao(addrDaoConfig, this);
        bookDao = new BookDao(bookDaoConfig, this);
        commentDao = new CommentDao(commentDaoConfig, this);
        favoriteDao = new FavoriteDao(favoriteDaoConfig, this);
        intentionDao = new IntentionDao(intentionDaoConfig, this);
        orderDao = new OrderDao(orderDaoConfig, this);
        typeDao = new TypeDao(typeDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Addr.class, addrDao);
        registerDao(Book.class, bookDao);
        registerDao(Comment.class, commentDao);
        registerDao(Favorite.class, favoriteDao);
        registerDao(Intention.class, intentionDao);
        registerDao(Order.class, orderDao);
        registerDao(Type.class, typeDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        addrDaoConfig.clearIdentityScope();
        bookDaoConfig.clearIdentityScope();
        commentDaoConfig.clearIdentityScope();
        favoriteDaoConfig.clearIdentityScope();
        intentionDaoConfig.clearIdentityScope();
        orderDaoConfig.clearIdentityScope();
        typeDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public AddrDao getAddrDao() {
        return addrDao;
    }

    public BookDao getBookDao() {
        return bookDao;
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

    public FavoriteDao getFavoriteDao() {
        return favoriteDao;
    }

    public IntentionDao getIntentionDao() {
        return intentionDao;
    }

    public OrderDao getOrderDao() {
        return orderDao;
    }

    public TypeDao getTypeDao() {
        return typeDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
